<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAY
        DwAAAk1TRnQBSQFMAwEBAAEIAQABCAEAAUABAAFAAQAE/wEJAQAI/wFCAU0BNgEEBgABNgEEAgABKAQA
        AQECAAFAAwABAQEAAQgGAAFAGAABgAIAAYADAAKAAQABgAMAAYABAAGAAQACgAIAA8ABAAHAAdwBwAEA
        AfABygGmAQABMwUAATMBAAEzAQABMwEAAjMCAAMWAQADHAEAAyIBAAMpAQADVQEAA00BAANCAQADOQEA
        AYABfAH/AQACUAH/AQABkwEAAdYBAAH/AewBzAEAAcYB1gHvAQAB1gLnAQABkAGpAa0CAAH/ATMDAAFm
        AwABmQMAAcwCAAEzAwACMwIAATMBZgIAATMBmQIAATMBzAIAATMB/wIAAWYDAAFmATMCAAJmAgABZgGZ
        AgABZgHMAgABZgH/AgABmQMAAZkBMwIAAZkBZgIAApkCAAGZAcwCAAGZAf8CAAHMAwABzAEzAgABzAFm
        AgABzAGZAgACzAIAAcwB/wIAAf8BZgIAAf8BmQIAAf8BzAEAATMB/wIAAf8BAAEzAQABMwEAAWYBAAEz
        AQABmQEAATMBAAHMAQABMwEAAf8BAAH/ATMCAAMzAQACMwFmAQACMwGZAQACMwHMAQACMwH/AQABMwFm
        AgABMwFmATMBAAEzAmYBAAEzAWYBmQEAATMBZgHMAQABMwFmAf8BAAEzAZkCAAEzAZkBMwEAATMBmQFm
        AQABMwKZAQABMwGZAcwBAAEzAZkB/wEAATMBzAIAATMBzAEzAQABMwHMAWYBAAEzAcwBmQEAATMCzAEA
        ATMBzAH/AQABMwH/ATMBAAEzAf8BZgEAATMB/wGZAQABMwH/AcwBAAEzAv8BAAFmAwABZgEAATMBAAFm
        AQABZgEAAWYBAAGZAQABZgEAAcwBAAFmAQAB/wEAAWYBMwIAAWYCMwEAAWYBMwFmAQABZgEzAZkBAAFm
        ATMBzAEAAWYBMwH/AQACZgIAAmYBMwEAA2YBAAJmAZkBAAJmAcwBAAFmAZkCAAFmAZkBMwEAAWYBmQFm
        AQABZgKZAQABZgGZAcwBAAFmAZkB/wEAAWYBzAIAAWYBzAEzAQABZgHMAZkBAAFmAswBAAFmAcwB/wEA
        AWYB/wIAAWYB/wEzAQABZgH/AZkBAAFmAf8BzAEAAcwBAAH/AQAB/wEAAcwBAAKZAgABmQEzAZkBAAGZ
        AQABmQEAAZkBAAHMAQABmQMAAZkCMwEAAZkBAAFmAQABmQEzAcwBAAGZAQAB/wEAAZkBZgIAAZkBZgEz
        AQABmQEzAWYBAAGZAWYBmQEAAZkBZgHMAQABmQEzAf8BAAKZATMBAAKZAWYBAAOZAQACmQHMAQACmQH/
        AQABmQHMAgABmQHMATMBAAFmAcwBZgEAAZkBzAGZAQABmQLMAQABmQHMAf8BAAGZAf8CAAGZAf8BMwEA
        AZkBzAFmAQABmQH/AZkBAAGZAf8BzAEAAZkC/wEAAcwDAAGZAQABMwEAAcwBAAFmAQABzAEAAZkBAAHM
        AQABzAEAAZkBMwIAAcwCMwEAAcwBMwFmAQABzAEzAZkBAAHMATMBzAEAAcwBMwH/AQABzAFmAgABzAFm
        ATMBAAGZAmYBAAHMAWYBmQEAAcwBZgHMAQABmQFmAf8BAAHMAZkCAAHMAZkBMwEAAcwBmQFmAQABzAKZ
        AQABzAGZAcwBAAHMAZkB/wEAAswCAALMATMBAALMAWYBAALMAZkBAAPMAQACzAH/AQABzAH/AgABzAH/
        ATMBAAGZAf8BZgEAAcwB/wGZAQABzAH/AcwBAAHMAv8BAAHMAQABMwEAAf8BAAFmAQAB/wEAAZkBAAHM
        ATMCAAH/AjMBAAH/ATMBZgEAAf8BMwGZAQAB/wEzAcwBAAH/ATMB/wEAAf8BZgIAAf8BZgEzAQABzAJm
        AQAB/wFmAZkBAAH/AWYBzAEAAcwBZgH/AQAB/wGZAgAB/wGZATMBAAH/AZkBZgEAAf8CmQEAAf8BmQHM
        AQAB/wGZAf8BAAH/AcwCAAH/AcwBMwEAAf8BzAFmAQAB/wHMAZkBAAH/AswBAAH/AcwB/wEAAv8BMwEA
        AcwB/wFmAQAC/wGZAQAC/wHMAQACZgH/AQABZgH/AWYBAAFmAv8BAAH/AmYBAAH/AWYB/wEAAv8BZgEA
        ASEBAAGlAQADXwEAA3cBAAOGAQADlgEAA8sBAAOyAQAD1wEAA90BAAPjAQAD6gEAA/EBAAP4AQAB8AH7
        Af8BAAGkAqABAAOAAwAB/wIAAf8DAAL/AQAB/wMAAf8BAAH/AQAC/wIAA///AP8A/wD/AP8ACQAB9C90
        AZkB/84AAfEBdC55AXQB/84AARoBdC15AZkBdAH0zgABBwF5LpkBdAHzzgABmQF5LZkBmgF0ARvNAAH/
        ARwumQGaAZkB8M0AAf8BdC+aApnNAAH0AXQVmgGZGpoBmc0AAfMBdBSaAZkBdAEaGZoBHAH/zAAB8gF0
        FJoBdAFLAXQBGhiaAXQB/8wAARoBeROaAXQBSwJRAZkBGheaAXQB9MwAApkSmgGZAlEBdAFRAXQBGhea
        AXQB88wAApkSmgJSAZkBmgF0AUsBdAEaFpoBeQHxywAB/wEcE5oBeQSaAXQBSwGZFpoBmQEaywAB/wF0
        GZoBUgFRARoWmgFzAfTKAAH0AXQZmgGZAVIBdAEaFZoBbgFsAfLJAAHzAXQbmgFSAXQBGhSaAXMBZQFm
        AbzIAAHxAXQcmgJ0FJoBdAJlAWYBvMcAAbwBdAGaGnoCmgF5E3oBmgF0AWYCZQFmAfDGAAGZAXkyegF0
        AWwDZQFsAfTEAAH/ARwBeTJ6AXQB+AGLA2UBrgH/wwAB/wF0M3oBeQHsAbQCZQFsAWYBvMMAAf8BdDR6
        AXMBtAGLAWUCiwFsAfXCAAH0AXQ0egFzAbQBkQFmAYsBkQFmAQfCAAHzAXQ0egFzAbQBtQGLAWUBiwFm
        AWwB/8EAAfABdDSaAXQBkgG1AYsDZQFmAfHBAAEaAZM0mQF0AZIBtQGLA2UBZgH3Af/AAAH/ARsB8gHu
        AVEuUgFRAZIB7QH3AbQBtQG0AYsBZQGmAWUBrgH0wwAB9AFSLXkBdAFzA7sDtQG0AYsBpgFlAWYB8MMA
        AfQBUg15AXQfeQF0AXMFuwK1AbQBiwGmAWYBB8MAAfQBUgN5AnQDeQF0AnkBdAGZIXkBcwIJBLsBtAGR
        AYsBpgFmAffDAAH0AVIDeQJ0AZkCeQFSAXQBeQFSApkgeQFzAgkDuwO0AosBZgHtwwAB9AFSA3kBdAFS
        AnQBeQFSAXQBeQNSAZkKeRSaAXoBdAMJArsBtAO1AZEBZgGRwwAB9AFSA3kBdAFSA3kCdAGZAVIBmQJ0
        AXoIeQEaFZkBcwQJArQBuwG1ArQBiwHtwwAB9AFSAXoDeQFSA3QBUQFSAXQBUgF0AVIBdAF6BnkBegEa
        AXQB6wGuAesBkQH4ApEB7AGRBe0B9wbvAQcDCQG7AbQCuwG0AYsBtAGLAffDAAH0AVIEegF5AXQGeQF0
        AnkFegF5AXoBGgF0AW0BrQOzA7QE2wTcARkB9AQZAQkCuwK0A7sCtAG1AYsB78MAAfQBUhV6ARoBdAHs
        Aq0DswO0AboC2wbcAgkCGQG7BbMBtAK7AbUCtAGLAfDDAAHzAXQUmgEaAXQB7QG7AbQCrQKzA7QBugHb
        BtwBCQHzAQkBugS0BLsBtQG7AbQBiwG0Aa4B9MMAAfQBdBSZAXQB7AK0AbsDtAKzAbQBugjcAgkBGQMJ
        AbsCCQG1ArMBtAG7AYsBkAG0AfcB/8QAAfQR8wH4AuwBkQK0BLsCtAG7AboBuwjcAdsB3AQZBAkBuwG1
        AbsBtQK0Aa4B8NcAAe4BkQG1ArQCtQO7AgkBugG0AboC2wfcAwkBGQUJA7sDtQGuAf/XAAH1Aa4BtQK0
        AYsBtAK7AgkBuwO0AboH2wHcARkB3AK0AQkBuwG0AgkDuwK1AbQBB9kAAQcBkQOLAbQDuwS0AboBtAnb
        ArQDCQGzAbQEuwK1AZEB9NkAAf8BkQG0AYsBkAGzAbQCuwK0AbsCCQO0AdUB2wEJAdwB2wHVBLQCCQK1
        ArsEtQEH2wAB8AK1ArQBuwEJAbsCtAUJAbsBtAHVAtsFtAKzAbsBCQO7AbQBswG0AfcB/9wAAe8CuwO1
        A7QFCQEZAQkGtAazA7QBrQG0Ae0B890AAf8B9wG7ArQBtQG7AbUJCQS0BrMBrQOzAbQBtQHw3wAB/wH3
        AbsCtAEJAfAJCQG0CbMEtAG7AbzhAAH/AfcBuwG1AbQJCQO0BbMFtAG7Ae8BvOMAAf8B7wG7AQkDuwUJ
        AbsLtAG7AQkBtQHw5gAB8AH3AQcCCQK7AgkLuwEJAfABBwH3AfToAAH/AQcBkgEHAhkLCQEZAfABuwH3
        AfAB/+sAAfUBvAL3AQcB8AfxAbwBuwHtAfcB8QH/7wAB/wH0AfAB7wH3Be0B9wEHAfEB9PUAAf8H9AH/
        /wD/AP8A/wDVAAFCAU0BPgcAAT4DAAEoBAABAQIAAUADAAEBAQABAQYAAQgWAAP/AQAI/xgACP8YAAj/
        GAAI/xgACP8YAAHgBQABBwH/GAAB4AUAAQcB/xgAAeAFAAEHAf8YAAHgBQABBwH/GAAB4AUAAQcB/xgA
        AcAFAAEHAf8YAAHABQABBwH/GAABwAUAAQcB/xgAAcAFAAEDAf8YAAHABQABAwH/GAABwAUAAQMB/xgA
        AcAFAAEDAf8YAAHABQABAwH/GAABgAUAAQMB/xgAAYAFAAEBAf8YAAGABgAB/xgAAYAGAAF/GAABgAYA
        AT8YAAGABgABHxgAAYAGAAEPHwABBx8AAQcfAAEDHwABAx8AAQEfAAEBWAAB4B8AAeAfAAHgHwAB4B8A
        AeAfAAHgHwAB4B8AAeAfAAHgHwAB4B8AAeAfAAHwBgABARgAAv8B/AQAAQEYAAL/AfwEAAEDGAAC/wH+
        BAABAxgAAv8B/gQAAQcYAAP/BAABBxgAA/8BgAMAAQ8YAAP/AYADAAEfGAAD/wHAAwABPxgAA/8B4AMA
        AX8YAAP/AfADAAH/GAAD/wH8AgABAQH/GAAD/wH+AgABAwH/GAAE/wGAAQABDwH/GAAE/wHgAQABfwH/
        GAAE/wH8AQEC/xgACP8YAAj/GAAI/xgACP8YAAs=
</value>
  </data>
</root>